/**
 * Dart 中抽象类：Dart抽象类主要用于定于标准，子类可以继承抽象类，也可以实现抽象类接口。
 * 
 *  1、抽象类通过abstract 关键字来定义
 * 
 *  2、Dart中的抽象方法不能用abstract声明，Dart中没有方法体的我们成为抽象方法。
 * 
 *  3、如果子类继承抽象类必须得实现里面的抽象方法
 * 
 *  4、如果把抽象类当做接口实现的话必须得实现抽象类里面定义的所有属性和方法。
 * 
 *  5、抽象类不能被实例化，只有继承它的子类可以
 * 
 * Extends 抽象类 和 Implements 的区别：
 * 
 *  1、如果要复用抽象类里面的方法，并且要用抽象方法约束子类的话我们就用Extends继承抽象类。
 * 
 *  2、如果只是把抽象类当做标准的话我们就用Implements实现抽象类。
 * 
 * 
 */

/**
 * Dart 中的多态：
 *  1、允许将子类类型的指针赋值给父类类型的指针，同一个函数调用会有不同的执行效果。
 * 
 *  2、子类的实例赋值给父类的引用。
 * 
 *  3、多态就是父类定义一个方法不去实现，让继承他的子类去实现，每个子类有不同的表现。
 */

//案例：定义也给Animal 类要求它的子类必须包含eat方法
abstract class Animal {
  // 抽象方法
  eat();
  // 非抽象方法
  printInfo() {
    print('这里不需要事项');
  }
}

class Dog extends Animal {
  @override
  eat() {
    // TODO: implement eat
    print("在吃饭");
  }
}

void main() {
  Dog d = new Dog();
  d.eat();
}
